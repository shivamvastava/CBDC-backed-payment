name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  FOUNDRY_PROFILE: ci

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check:
    name: Foundry project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Show Forge version
        run: |
          forge --version

      - name: Initialize submodules and install dependencies
        run: |
          git submodule update --init --recursive
          forge install --no-commit

      - name: Run Forge fmt
        run: |
          forge fmt --check
        id: fmt
        continue-on-error: true

      - name: Run Forge build
        run: |
          forge build --sizes
        id: build

      - name: Run Forge tests
        run: |
          forge test -vvv
        id: test

      - name: Generate gas report
        run: |
          echo "## Gas Report" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          forge test --gas-report >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  coverage:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Initialize submodules and install dependencies
        run: |
          git submodule update --init --recursive
          forge install --no-commit

      - name: Run coverage
        run: |
          forge coverage --report lcov

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          use_oidc: true
          files: ./lcov.info
          fail_ci_if_error: true
          flags: smart-contracts
          name: smart-contracts

  build-summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [check, coverage]
    if: always()
    steps:
      - name: Build Results Summary
        run: |
          echo "## Build Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.check.result }}" == "success" ]; then
            echo "✅ **Main Build & Tests**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Main Build & Tests**: Failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.coverage.result }}" == "success" ]; then
            echo "✅ **Coverage Analysis**: Completed" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Coverage Analysis**: Issues or failed" >> $GITHUB_STEP_SUMMARY
          fi
