name: Deploy Contracts

on:
  workflow_dispatch:
    inputs:
      network:
        description: 'Network to deploy to'
        required: true
        default: 'sepolia'
        type: choice
        options:
        - sepolia
        - goerli
        - mainnet
        - localhost
      private_key:
        description: 'Private key for deployment (will be masked)'
        required: true
        type: string
      pool_manager_address:
        description: 'Uniswap V4 PoolManager address (optional, unused by SimpleDeploy; kept for backward compatibility)'
        required: false
        type: string
        default: '0x0000000000000000000000000000000000000000'

env:
  FOUNDRY_PROFILE: default

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.network }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Initialize submodules and install dependencies
        run: |
          git submodule update --init --recursive
          forge install --no-commit

      - name: Build contracts
        run: forge build

      - name: Deploy contracts
        env:
          PRIVATE_KEY: ${{ inputs.private_key }}
          POOL_MANAGER_ADDRESS: ${{ inputs.pool_manager_address }}
          RPC_URL: ${{ secrets[format('{0}_RPC_URL', upper(inputs.network))] }}
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
        run: |
          echo "Deploying to ${{ inputs.network }}..."

          # Use the simple deployment script that works with current contracts
          forge script script/SimpleDeploy.s.sol \
            --rpc-url $RPC_URL \
            --private-key $PRIVATE_KEY \
            --broadcast \
            --verify \
            --etherscan-api-key $ETHERSCAN_API_KEY \
            -vvvv

      - name: Upload deployment artifacts
        uses: actions/upload-artifact@v3
        with:
          name: deployment-${{ inputs.network }}-${{ github.sha }}
          path: |
            broadcast/
            deployment.env
            out/
          retention-days: 30

      - name: Create deployment summary
        run: |
          echo "## Deployment Complete" >> $GITHUB_STEP_SUMMARY
          echo "Network: ${{ inputs.network }}" >> $GITHUB_STEP_SUMMARY
          echo "Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          if [ -f deployment.env ]; then
            echo "### Contract Addresses" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            cat deployment.env >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi
